"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var Controller=function t(e){_classCallCheck(this,t),this.route=e.route,this.app=e.app},Request=function(){function t(){_classCallCheck(this,t)}return t.load_file=function(t){var e=t.url,o=t.loaded;console.log("loading file: "+e),$.ajax({url:e,success:function(t){o(t)}}).fail(function(t,e,o){throw"Unable to load request! Error Code: "+e+", Message: "+o})},t}(),Page=function(){function t(e,o){_classCallCheck(this,t),this.base_content="",this.content="",this.controller=null,this.route=e,this.app=o,console.log("Created page")}return t.prototype.start=function(){var t=this;if(null==this.route||void 0==this.route)throw"Malformatted route! Page::start()";Request.load_file({url:Uri.get_base_url()+this.app.path+"/"+this.route.view,loaded:function(e){t.base_content=e,t.parse_page()}})},t.prototype.includes=function(){console.log("including files");var t=this;$("include").each(function(){var e=$(this);Request.load_file({url:Uri.get_base_url()+t.app.path+"/"+e.attr("file"),loaded:function(t){e.replaceWith(t)}})}),this.finish()},t.prototype.on_load=function(){console.log("Page loaded, loading late files");$("onload").each(function(){var t=$(this),e=t.attr("type").toLowerCase(),o=null;switch(e.toLowerCase()){case"script":o=t.attr("src"),t.replaceWith("<script src='"+o+"'></script>")}})},t.prototype.finish=function(){this.on_load()},t.prototype.parse_page=function(){null!=this.base_content&&(console.log("Parsing replaces"),this.content=this.base_content,this.render_page())},t.prototype.render_page=function(){if(null==this.content)throw"Content was null Page::render_page()";void 0!=this.route.controller&&null!=this.route.controller&&(this.controller=new Controller(this),this.route.controller(this.controller)),console.log("Setting page html"),$("view").html(this.content),console.log("Done setting page html"),this.includes()},t}(),Router=function(){function t(e){_classCallCheck(this,t),this.states=[],this.app=e,this.page=null}return t.prototype.set_routes=function(t){if(!$.isArray(t))throw"route was not an array Router::set_routes()";var e=this.states;$.each(t,function(t,o){if(void 0==o.url)throw"Route.url was not defined Router::set_routes()";console.log(o.url),e[o.url]=o}),console.log("Set routes")},t.prototype.do_route=function(){var t=this.get_route(Uri.get_path());if(null!=t&&void 0!=t)console.log("This was a valid route: "+Uri.get_path()+", Route: "+t.url),this.load_route(t);else{if(t=this.get_route("/"),null==t||void 0==t)throw"No route found exiting Router::do_route()";console.log("invalid route loading root"),this.load_route(t)}},t.prototype.load_route=function(t){if(void 0==t.view)throw"Route undefined Router::load_route(route)";console.log("creating page"),this.page=new Page(t,this.app),this.route_start(this.page)},t.prototype.route_start=function(t){if(null==t||void 0==t)throw"Passed page was null Router::route_start()";console.log("Starting page"),t.start()},t.prototype.get_route=function(t){return void 0!=this.states[t]?this.states[t]:null},t}(),Uri=function(){function t(){_classCallCheck(this,t)}return t.get_current_url=function(){var t=window.location.href,e=/((\w)*\.(\w)*)/g;return t=t.replace(e,"",t)},t.get_base_url=function(){var e=t.get_current_url();"/"==e.substring(e.length-1)&&(e=e.substring(0,e.length-1));var o=e.indexOf("#");return"/"!=e.substring(e.length-1)&&(e+="/"),o>-1?e.substring(0,e.indexOf("#")):e},t.get_path=function(){var e=t.get_current_url(),o=e.indexOf("#");return e=o>-1?e.substring(o):e.replace(t.get_current_url(),""),"#"==e.substring(0,1)&&(e=e.substring(1,e.length)),(""==e||void 0==e||null==e)&&(e="/"),e},t}(),Application=function(){function t(e,o){var n=this;_classCallCheck(this,t),this.name=e,this.path=o,this.routes=new Router(this),$(window).on("hashchange",function(){n.routes.do_route()})}return t.prototype.run=function(t){this.routes.set_routes(t),this.routes.do_route()},t}();